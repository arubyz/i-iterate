|| [[Iterate_9#return  < ]] || [[Iterate_11#hash  > ]] ||  || [[Iterate_8#Keywords  << ]] || [[Iterate_8#Keywords  Up ]] || [ >> ] ||  ||  ||  ||  || [[Iterate#Top Top]] || [[Iterate_toc#SEC_Contents Contents]] || [Index] || [[Iterate_abt#SEC_About  ? ]] ||

== 2.2 Collect values into a list ==

This keyword will accumulate values into a list, and, unless `finally` driver is given, will return the generated list. The syntax of this keyword is `(collect EXPRESSION [into VARIABLE])`, where EXPRESSION is any Lisp form, and optional variable is the destination. You may declare this variable with `with` driver to be able to initialize it before any collection happens. If you donâ€™t declare the variable until `collect`, it is automatically declared.

||  || {{{ (++ (for (a b) pairs test-hash limit 100)   (for (c d) pairs test-hash limit 120)   (collect (list (cons a b) (cons c d)))   (message "a: %s, b: %s, c: %s, d: %s" a b c d)) }}} ||

The example above iterates over two hash-tables simultaneously and collects `(min 100 120)` conses, prints the collected keys and values, and returns what was collected.

----

|| [[Iterate_9#return  < ]] || [[Iterate_11#hash  > ]] ||  || [[Iterate_8#Keywords  << ]] || [[Iterate_8#Keywords  Up ]] || [ >> ] ||

This document was generated by _wvxvw_ on _December 12, 2012_ using [http://www.nongnu.org/texi2html/ _texi2html 1.82_].
